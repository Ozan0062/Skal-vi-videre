@page "/Register"

@using Skal_vi_videre.Repository
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<PageTitle>Opret Virksomhed</PageTitle>

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="row w-100">
        <!-- Left Column: Form -->
        <div class="col-lg-6 d-flex justify-content-center align-items-center">
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Message))
                {
                    <div class="alert alert-danger">
                        @Message
                    </div>
                }
                <EditForm Model="Input" OnValidSubmit="RegisterCompany">
                    <DataAnnotationsValidator />
                    <hr />
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Cvr" id="cvr" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="cvr">CVR Nummer</label>
                        <ValidationMessage For="() => Input.Cvr" />
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Name" id="name" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="name">Navn</label>
                        <ValidationMessage For="() => Input.Name" />
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Address" id="address" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="address">Adresse</label>
                        <ValidationMessage For="() => Input.Address" />
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Email" id="email" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="email">Email</label>
                        <ValidationMessage For="() => Input.Email" />
                    </div>
                    <div class="form-floating mb-3 position-relative">
                        <InputText @bind-Value="Input.Password" id="password" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" type="@passwordInputType" autocomplete="current-password" aria-required="true" placeholder="password" />
                        <label for="password" class="form-label">Adgangskode</label>
                        <ValidationMessage For="() => Input.Password" />

                        <!-- Vis/skjul adgangskode ikon -->
                        <span @onclick="TogglePasswordVisibility" class="position-absolute end-0 me-3" style="top: 50%; transform: translateY(-50%); cursor: pointer;">
                            <i class="fas @(passwordInputType == "Password" ? "fa-eye" : "fa-eye-slash")"></i>
                        </span>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.PhoneNumber" id="phoneNumber" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="phoneNumber">Telefon Nummer</label>
                        <ValidationMessage For="() => Input.PhoneNumber" />
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Description" id="description" class="form-control" style="border: 4px solid #2b59a2; border-radius: 8px;" />
                        <label for="description">Beskrivelse</label>
                        <ValidationMessage For="() => Input.Description" />
                    </div>
                    <button type="submit" id="create" class="w-100 btn btn-lg btn-primary" style="background-color: #2b59a2;">Opret virksomhed</button>
                </EditForm>
            </div>
        </div>

        <!-- Right Column: Image -->
        <div class="col-lg-6 d-flex justify-content-center align-items-center mt-4 mt-lg-0">
            <img src="images/skal vi videre endelig logo.png" alt="Skal Vi Videre Logo" class="img-fluid" style="max-width: 100%; height: auto;" />
        </div>
    </div>
</div>

@code {
    private CompanyRepository companyRepository = new CompanyRepository();
    private Company company = new Company();
    private InputModel Input { get; set; } = new();
    private string passwordInputType = "Password";
    private Company? loggedInCompany { get; set; }
    private string? Message;

    private async Task RegisterCompany()
    {
        Console.WriteLine("RegisterCompany kaldt");
        bool isValid = await company.ValidateCompanyAsync(Input.Cvr, Input.Name);

        if (isValid)
        {
            Console.WriteLine("Virksomheden er valideret og kan oprettes.");

            if (companyRepository.DoesCvrExist(Input.Cvr))
            {
                Message = "CVR-nummeret findes allerede.";
                return;
            }
            else if (companyRepository.DoesEmailExist(Input.Email))
            {
                Message = "E-mailadressen findes allerede.";
                return;
            }
            else if (companyRepository.DoesPhoneNumberExist(Input.PhoneNumber))
            {
                Message = "Telefonnummeret findes allerede.";
                return;
            }

            // Logik til at gemme virksomheden
            Company company = new Company
                {
                    Cvr = Input.Cvr,
                    Name = Input.Name,
                    Address = Input.Address,
                    Email = Input.Email,
                    Password = Input.Password,
                    PhoneNumber = Input.PhoneNumber,
                    Description = Input.Description,
                    Role = "Company"
                };
        try
        {
            // Forsøg at gemme virksomheden
            companyRepository.Create(company);
            NavigationManager.NavigateTo("/"); // Naviger efter oprettelsen
        }
        catch (Exception ex)
        {
            // Hvis der opstår en fejl, vis fejlbesked
            Message = "Oprettelsen af virksomheden mislykkedes";
        }
    }
        else
        {
            Message = "Validering fejlede. CVR-nummeret og virksomhedsnavnet matcher ikke.";
        }
    }

    private void TogglePasswordVisibility()
    {
        passwordInputType = passwordInputType == "Password" ? "text" : "Password";
    }

    private class InputModel
    {
        [Required(ErrorMessage = "CVR-nummer er påkrævet.")]
        [Display(Name = "CVR-nummer")]
        public string Cvr { get; set; } = string.Empty;

        [Required(ErrorMessage = "Navn er påkrævet.")]
        [Display(Name = "Navn")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Adresse er påkrævet.")]
        [Display(Name = "Adresse")]
        public string Address { get; set; } = string.Empty;

        [Required(ErrorMessage = "E-mail er påkrævet.")]
        [EmailAddress(ErrorMessage = "Indtast venligst en gyldig e-mailadresse.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Adgangskode er påkrævet.")]
        [DataType(DataType.Password)]
        [Display(Name = "Adgangskode")]
        public string Password { get; set; } = string.Empty;

        [Required(ErrorMessage = "Telefonnummer er påkrævet.")]
        [DataType(DataType.PhoneNumber)]
        [Display(Name = "Telefonnummer")]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required(ErrorMessage = "Beskrivelse er påkrævet.")]
        [Display(Name = "Beskrivelse")]
        public string Description { get; set; } = string.Empty;
    }

}
